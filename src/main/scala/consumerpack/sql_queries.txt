--7. possible fraud purchases (by payment_txn_success as failed)
--	Subsections by location / category / price


-- see all failed transactions
select order_id, payment_txn_id, failure_reason, price, product, category, city, country
from TABLE_NAME
where payment_txn_success = 'N';


-- failed transactions by location
select order_id, payment_txn_id, failure_reason, city, country
from TABLE_NAME
where payment_txn_success = 'N';


-- failed transactions by price
select order_id, payment_txn_id, failure_reason, price
from TABLE_NAME
where payment_txn_success = 'N';


-- failed transactions by category
select order_id, payment_txn_id, failure_reason, product_category
from TABLE_NAME
where payment_txn_success = 'N';


-- count of each failure reasons
select failure_reason, count(payment_txn_id) as quantity
from TABLE_NAME
where payment_txn_success = 'N'
group by failure_reason;


-- count of successful transactions vs failure transactions
select payment_txn_success, count(payment_txn_id) as quantity
from TABLE_NAME
group by payment_txn_success;
5. change in price/cost ("sale") for products by timeframe

-- with extract()
select price as sale, extract (year_month from datetime) as YEAR_MONTH from TABLE_NAME order by YEAR_MONTH asc

-- with REGEXP()
select price as sale, datetime as Year_Month from TABLE_NAME where datetime REGEXP '^[1-2][0-9][0-9][0-9]-[0-1][0-9]' order by YEAR_MONTH asc;

-- with rlike()
select price as sale, datetime as Year_Month from TABLE_NAME where rlike(datetime, [1-2][0-9][0-9][0-9]-[0-1][0-9]) order by YEAR_MONTH asc;


6. popular cities/countries by most purchases

select city, sum(payment_txn_id) as purchase_count from TABLE_NAME where payment_txn_success = 'Y' group by city order by city
select country, sum(payment_txn_id) as purchase_count from TABLE_NAME where payment_txn_success = 'Y' group by country order by country
